name: Vector Test Suite

vars:
  url: http://localhost:8080

testcases:
- name: Test vector bulk-insertion (successful)
  steps:
  - type: http
    method: PUT
    url: "{{.url}}/vector/bulk-insert"
    body: > 
      {
        "embeddings": [
          {"data": [3.2, -1.5], "id": 1},
          {"data": [4.7, 2.1], "id": 2},
          {"data": [-6.3, 3.4], "id": 3},
          {"data": [0.9, -4.8], "id": 4},
          {"data": [-2.7, 5.6], "id": 5},
          {"data": [1.3, -3.9], "id": 6},
          {"data": [2.4, 6.1], "id": 7},
          {"data": [-1.1, 3.0], "id": 8},
          {"data": [5.5, -2.2], "id": 9},
          {"data": [0.0, 4.4], "id": 10},
          {"data": [-3.6, -0.7], "id": 11},
          {"data": [4.1, 5.3], "id": 12},
          {"data": [-2.9, 2.8], "id": 13},
          {"data": [3.7, -3.6], "id": 14},
          {"data": [1.0, 0.5], "id": 15},
          {"data": [5.9, 1.7], "id": 16},
          {"data": [-4.4, -3.2], "id": 17},
          {"data": [2.8, 4.9], "id": 18},
          {"data": [-1.5, -2.4], "id": 19},
          {"data": [3.3, 1.6], "id": 20},
          {"data": [4.6, -1.3], "id": 21},
          {"data": [-2.1, 3.7], "id": 22},
          {"data": [1.8, -5.4], "id": 23},
          {"data": [3.9, 2.5], "id": 24},
          {"data": [-1.4, 4.2], "id": 25},
          {"data": [0.2, -3.1], "id": 26},
          {"data": [5.1, 1.3], "id": 27},
          {"data": [-2.8, -1.7], "id": 28},
          {"data": [3.0, 5.5], "id": 29},
          {"data": [1.5, -2.8], "id": 30},
          {"data": [-4.9, 3.1], "id": 31},
          {"data": [2.6, -4.5], "id": 32},
          {"data": [0.7, 3.8], "id": 33},
          {"data": [-3.3, 2.2], "id": 34},
          {"data": [4.0, -0.9], "id": 35},
          {"data": [-1.2, 4.9], "id": 36},
          {"data": [3.4, -2.6], "id": 37},
          {"data": [0.6, 1.8], "id": 38},
          {"data": [-2.5, -3.9], "id": 39},
          {"data": [5.3, 2.0], "id": 40},
          {"data": [-0.8, 3.3], "id": 41},
          {"data": [2.1, -4.2], "id": 42},
          {"data": [4.5, 1.4], "id": 43},
          {"data": [-3.7, -2.5], "id": 44},
          {"data": [1.9, 3.6], "id": 45},
          {"data": [0.3, -5.1], "id": 46},
          {"data": [4.8, -3.0], "id": 47},
          {"data": [-1.6, 2.9], "id": 48},
          {"data": [2.9, -4.0], "id": 49}
        ]
      }
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.message ShouldEqual "49/49 vectors successfully inserted."
    - result.bodyjson.status ShouldEqual 200

- name: Test similarity search (successful)
  steps:
  - type: http
    method: GET
    url: "{{.url}}/vector/search"
    body: >
      {
        "queryVector": {
          "data": [1.0, 2.0],
          "id": -1
        },
        "k": 5
      }
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.message ShouldEqual "Similarity search successfully performed."
    - result.bodyjson.status ShouldEqual 200
    - result.bodyjson.data.nearest_neighbor_ids ShouldEqual [38 15 33 45 41]

- name: Test similarity search (invalid values)
  steps:
  - type: http
    method: GET
    url: "{{.url}}/vector/search"
    body: >
      {
        "data": "test",
        "k": -1
      }
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 400
    - result.bodyjson.message ShouldEqual "Bad request"
    - result.bodyjson.status ShouldEqual 400
    - result.bodyjson.error.code ShouldEqual INVALID_REQUEST_BODY
    - result.bodyjson.error.description ShouldEqual "The body you provided in your request is invalid."

- name: Test similarity search (invalid request body)
  steps:
  - type: http
    method: GET
    url: "{{.url}}/vector/search"
    body: "{\"hello\": \"world\"}"
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 400
    - result.bodyjson.message ShouldEqual "Bad request"
    - result.bodyjson.status ShouldEqual 400
    - result.bodyjson.error.code ShouldEqual "INVALID_REQUEST_BODY"
    - result.bodyjson.error.description ShouldEqual "The body you provided in your request is invalid."

- name: Test vector insertion (successful)
  steps:
  - type: http
    method: PUT
    url: "{{.url}}/vector/insert"
    body: >
      {
        "embedding": {
          "data": [1,2], 
          "id": 200
        }
      }
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.message ShouldEqual "Vector successfully inserted."
    - result.bodyjson.status ShouldEqual 200
  
- name: Test vector insertion (incorrect dimensions)
  steps:
  - type: http
    method: PUT
    url: "{{.url}}/vector/insert"
    body: >
      {
        "embedding": {
          "data": [1,2,3],
          "id": 201
        }
      }
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 400
    - result.bodyjson.message ShouldEqual "The vector you provided is invalid."
    - result.bodyjson.status ShouldEqual 400
    - result.bodyjson.error.code ShouldEqual "INVALID_VECTOR_PROVIDED"
    - result.bodyjson.error.description ShouldEqual "provided a 3-dimensional vector while the vector space is 2-dimensional"

- name: Test vector insertion (ID already exists)
  steps:
  - type: http
    method: PUT
    url: "{{.url}}/vector/insert"
    body: >
      {
        "embedding": {
          "data": [3,4],
          "id": 1
        }
      }
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 500
    - result.bodyjson.message ShouldEqual "An error occured when inserting your vector."
    - result.bodyjson.status ShouldEqual 500
    - result.bodyjson.error.code ShouldEqual "CANNOT_INSERT_VECTOR"
    - result.bodyjson.error.description ShouldEqual "embedding with ID 1 already exists"

- name: Test vector insertion (invalid request body)
  steps:
  - type: http
    method: PUT
    url: "{{.url}}/vector/insert"
    body: "{\"hello\": \"world\"}"
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 400
    - result.bodyjson.message ShouldEqual "Bad request"
    - result.bodyjson.status ShouldEqual 400
    - result.bodyjson.error.code ShouldEqual "INVALID_REQUEST_BODY"
    - result.bodyjson.error.description ShouldEqual "The body you provided in your request is invalid."
  
- name: Test vector bulk-insertion (incorrect dimensions)
  steps:
  - type: http
    method: PUT
    url: "{{.url}}/vector/bulk-insert"
    body: >
      {
        "embeddings": [
          {"data": [3.2, -1.5, 1], "id": 100},
          {"data": [4.7, 2.1, 1], "id": 101},
          {"data": [-6.3, 3.4], "id": 102}
        ]
      }
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 500
    - result.bodyjson.message ShouldEqual "1/3 vectors successfully inserted."
    - result.bodyjson.status ShouldEqual 500
    - result.bodyjson.error.code ShouldEqual "VECTORS_SKIPPED"
    - result.bodyjson.error.description ShouldContain "vector with ID 100 was skipped - provided a 3-dimensional vector while the vector space is 2-dimensional"
    - result.bodyjson.error.description ShouldContain "vector with ID 101 was skipped - provided a 3-dimensional vector while the vector space is 2-dimensional"

- name: Test vector bulk-insertion (invalid request body)
  steps:
  - type: http
    method: PUT
    url: "{{.url}}/vector/bulk-insert"
    body: "{\"hello\": \"world\"}"
    headers:
      X-Eigen-API-Key: test
    timeout: 5
    assertions:
    - result.statuscode ShouldEqual 400
    - result.bodyjson.message ShouldEqual "Bad request"
    - result.bodyjson.status ShouldEqual 400
    - result.bodyjson.error.code ShouldEqual "INVALID_REQUEST_BODY"
    - result.bodyjson.error.description ShouldEqual "The body you provided in your request is invalid."


