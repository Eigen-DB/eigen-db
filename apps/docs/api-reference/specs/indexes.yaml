openapi: 3.0.3
info:
  title: EigenDB REST API
  description: REST API for EigenDB.
  version: 1.0.0
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Eigen-API-Key
  schemas:
    embeddingSchema:
      type: object
      properties:
        data:
          type: array
          items:
            type: number
            format: float
          description: The embedding's data
        id:
          type: integer
          description: The embedding's ID
        metadata:
          type: object
          description: The embedding's metadata (set to {} for empty metadata)
      required:
        - data
        - id
        - metadata
    responseSchema:
      type: object
      properties:
        status:
          type: integer
          description: Status code of the response
        message:
          type: string
          description: Message giving basic information on the response
        data:
          type: object
          description: Important data to be given to the caller
        error:
          type: object
          description: An error that has occured
          properties:
            code:
              type: string
              description: An error code unique to this type of error
            description:
              type: string
              description: A detailed description of the error
      required:
        - status
        - message
paths:
  /api/v1/indexes/list:
    get:
      summary: List all index names
      operationId: listIndexes
      description: List the names of all indexes that currently exist.
      responses:
        '200':
          description: Stats fetched successfully. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSchema'
              example:
                status: 200
                message: Indexes listed successfully
                data:
                  indexes: 
                    - "hello-world"
                    - "fubar"
                    - "some-thing"
        '500':
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSchema'
              example:
                status: 500
                message: An error occured while listing indexes.
                error:
                  code: INDEXES_NOT_LISTED
                  description: detailed description of the error...
  /api/v1/indexes/{indexName}/stats:
    get:
      summary: Get stats of an index
      operationId: getIndexStats
      description: Get stats of an index containing its information. 
      parameters:
        - name: indexName
          in: path
          description: Name of the index
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Stats fetched successfully. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSchema'
              example:
                status: 200
                message: Stats for index 'my-index' fetched successfully.
                data:
                  index_name: 'my-index'
                  dimensions: 1536
                  metric: 'cosine'
        '500':
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSchema'
              example:
                status: 500
                message: An error occured while fetching the index.
                error:
                  code: INDEX_NOT_FETCHED
                  description: detailed description of the error...
  /api/v1/indexes/{indexName}/create:
    put:
      summary: Create an index
      operationId: createIndex
      description: Create an index with given specifications.
      parameters:
        - name: indexName
          in: path
          description: Name of the index
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dimensions
                - metric
              properties:
                dimensions:
                  type: number
                  format: integer
                  description: Dimensions of the index
                metric:
                  type: string
                  description: The similarity metric for the index
      responses:
        '200':
          description: Index created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSchema'
              example:
                status: 200
                message: Index '<indexName>' created successfully.
        '500':
          description: Invalid similarity metric (currently supporting cosine, l2, ip)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSchema'
              example:
                status: 500
                message: An error occured while creating the index.
                error:
                  code: INVALID_SIMILARITY_METRIC
                  description: detailed description of the error...
  /api/v1/indexes/{indexName}/delete:
    delete:
      summary: Delete an index
      operationId: deleteIndex
      description: Delete an index given its name.
      parameters:
        - name: indexName
          in: path
          description: Name of the index
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Index successfully deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSchema'
              example:
                status: 200
                message: Index '<indexName>' successfully deleted.
        '500':
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseSchema'
              example:
                status: 500
                message: An error occured while deleting the index.
                error:
                  code: INDEX_NOT_DELETED
                  description: detailed description of the error...